const db = require('./src/config/db');

async function verificarChavesEstrangeiras(cliente_id, prestador_id, servico_id) {
  try {
    console.log('üîç Verificando chaves estrangeiras...\n');

    // Verificar cliente
    const cliente = await db.query('SELECT id, nome FROM clientes WHERE id = $1', [cliente_id]);
    console.log('üë• CLIENTE:');
    if (cliente.rows.length > 0) {
      console.log(`   ‚úÖ ID ${cliente_id}: ${cliente.rows[0].nome}`);
    } else {
      console.log(`   ‚ùå ID ${cliente_id}: N√ÉO ENCONTRADO`);
    }

    // Verificar prestador
    const prestador = await db.query('SELECT id, nome FROM prestadores WHERE id = $1', [prestador_id]);
    console.log('üíº PRESTADOR:');
    if (prestador.rows.length > 0) {
      console.log(`   ‚úÖ ID ${prestador_id}: ${prestador.rows[0].nome}`);
    } else {
      console.log(`   ‚ùå ID ${prestador_id}: N√ÉO ENCONTRADO`);
    }

    // Verificar servi√ßo
    const servico = await db.query('SELECT id, nome FROM servicos WHERE id = $1 AND ativo = true', [servico_id]);
    console.log('‚úÇÔ∏è SERVI√áO:');
    if (servico.rows.length > 0) {
      console.log(`   ‚úÖ ID ${servico_id}: ${servico.rows[0].nome}`);
    } else {
      console.log(`   ‚ùå ID ${servico_id}: N√ÉO ENCONTRADO ou inativo`);
    }

  } catch (error) {
    console.error('‚ùå Erro ao verificar chaves:', error);
  }
}

// Teste com os IDs que voc√™ est√° usando
verificarChavesEstrangeiras(1, 1, 1); // Substitua pelos IDs reais